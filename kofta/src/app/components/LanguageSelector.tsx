import React from "react";
import { useTranslation } from "react-i18next";

interface LanguageSelectorProps {
	options?: Array<{ value: string; label: string }>;
}

export const LanguageSelector: React.FC<LanguageSelectorProps> = ({
	options = [
		{ "value": "en", "label": "ðŸ‡¬ðŸ‡§ en" },
		{ "value": "cs", "label": "ðŸ‡¨ðŸ‡¿ cs" },
		{ "value": "de", "label": "ðŸ‡©ðŸ‡ª de" },
		{ "value": "es", "label": "ðŸ‡ªðŸ‡¸ es" },
		{ "value": "fr", "label": "ðŸ‡«ðŸ‡· fr" },
		{ "value": "he", "label": "ðŸ‡®ðŸ‡± he" },
		{ "value": "hi", "label": "ðŸ‡®ðŸ‡³ hi" },
		{ "value": "hu", "label": "ðŸ‡­ðŸ‡º hu" },
		{ "value": "id", "label": "ðŸ‡®ðŸ‡© id" },
		{ "value": "it", "label": "ðŸ‡®ðŸ‡¹ it" },
		{ "value": "lt", "label": "ðŸ‡±ðŸ‡¹ lt" },
		{ "value": "nb", "label": "ðŸ‡³ðŸ‡´ nb" },
		{ "value": "nl", "label": "ðŸ‡§ðŸ‡¶ nl" },
		{ "value": "pl", "label": "ðŸ‡µðŸ‡± pl" },
		{ "value": "pt-BR", "label": "ðŸ‡µðŸ‡¹ pt-br" },
		{ "value": "pt-PT", "label": "ðŸ‡µðŸ‡¹ pt-pt" },
		{ "value": "ru", "label": "ðŸ‡·ðŸ‡º ru" },
		{ "value": "th", "label": "ðŸ‡¹ðŸ‡­ th" },
		{ "value": "tr", "label": "ðŸ‡¹ðŸ‡· tr" },
		{ "value": "zh-CN", "label": "ðŸ‡¨ðŸ‡³ zh-cn" }
	],
}) => {
	const { i18n } = useTranslation();

	return (
		<select
			value={i18n.language}
			onChange={(e) => {
				i18n.changeLanguage(e.target.value);
			}}
		>
			{options.map((o) => (
				<option key={o.value} value={o.value}>
					{o.label}
				</option>
			))}
		</select>
	);
};
